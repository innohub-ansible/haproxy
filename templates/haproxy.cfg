global
        log /dev/log local0
        log /dev/log local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

{% if haproxy_ssl %}
        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
        ssl-default-bind-options no-sslv3
{% endif %}

defaults
        log global
        mode http
        option httplog
        option dontlognull
        timeout connect 5000
        timeout client 50000
        timeout server 50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend fe-{{ haproxy_app_name }}-insecure
        bind *:80
{% if haproxy_ssl %}
        redirect scheme https code 301 if !{ ssl_fc }
{% else %}
        default_backend be-{{ haproxy_app_name }}
{% endif %}

{% if haproxy_ssl %}
frontend fe-{{ haproxy_app_name }}
        reqadd X-Forwarded-Proto:\ https
        rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains
        bind *:443 ssl crt /etc/haproxy/ssl.pem
        # ciphers AES128+EECDH:AES128+EDH force-tlsv12 no-sslv3
        default_backend be-{{ haproxy_app_name }}
{% endif %}

backend be-{{ haproxy_app_name }}
        mode http
        balance roundrobin
        option forwardfor
        http-request set-header X-Forwarded-Port %[dst_port]
{% if haproxy_ssl %}
        http-request add-header X-Forwarded-Proto https if { ssl_fc }
{% endif %}
        option httpchk HEAD {{ haproxy_chk_path }} HTTP/1.1\r\nHost:{{ haproxy_chk_host }}
        {% for server in haproxy_backend_servers %}
        server {{ server.name }} {{ server.ip }}:{{ server.port }} check
        {% endfor %}

listen stats *:1936
    stats enable
    stats uri /
    stats hide-version
    {% for user in haproxy_stats_users %}
    stats auth {{ user.username }}:{{ user.password }}
    {% endfor %}
